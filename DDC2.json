[{"id":"7dd9dd0e.176be4","type":"tab","label":"DCS-CNC v2","disabled":false,"info":"This is integrating Discord Groups to the permission set."},{"id":"fa184482.72e9a8","type":"inject","z":"7dd9dd0e.176be4","name":"Server Specific Settings","repeat":"","crontab":"","once":true,"onceDelay":"0.1","topic":"","payload":"false","payloadType":"bool","x":150,"y":40,"wires":[["8131ac1d.eac02"]]},{"id":"d99de4bc.dedfe8","type":"function","z":"7dd9dd0e.176be4","name":"Set DDC2.ServerID","func":"flow.set('DDC2.ServerID', '<INSERT_SERVERID>');\nnode.status({fill:\"green\",shape:\"dot\",text:\"DDC2.ServerID: \" +flow.get('DDC2.ServerID')});","outputs":0,"noerr":0,"initialize":"","finalize":"","x":610,"y":160,"wires":[],"icon":"node-red/cog.svg"},{"id":"c8bb41d6.b524f","type":"function","z":"7dd9dd0e.176be4","name":"Set DDC2.HostedBy","func":"flow.set('DDC2.HostedBy.Name', 'Name of Person Hosting Server Here');\nflow.set('DDC2.HostedBy.DiscordID','<@Hosts DiscordID>');\nflow.set('DDC2.HostedBy.DNSName', 'DNS Name if you have one for your server');\nnode.status({fill:\"green\",shape:\"dot\",text:\"DDC2.HostedBy: \" +flow.get('DDC2.HostedBy.Name')});","outputs":0,"noerr":0,"initialize":"","finalize":"","x":620,"y":40,"wires":[],"icon":"node-red/cog.svg"},{"id":"cf797f0c.5c3b6","type":"function","z":"7dd9dd0e.176be4","name":"Set DDC2.HostedBy.ISP","func":"flow.set('DDC2.HostedBy.ISP.Name', '<insert ISP here>');\nflow.set('DDC2.HostedBy.ISP.Speed', '<insert Internet Speed Here>');\nnode.status({fill:\"green\",shape:\"dot\",text:\"DDC2.HostedBy.ISP: \" +flow.get('DDC2.HostedBy.ISP.Name')});","outputs":0,"noerr":0,"initialize":"","finalize":"","x":630,"y":100,"wires":[],"icon":"node-red/cog.svg"},{"id":"e0b692e6.c9d66","type":"function","z":"7dd9dd0e.176be4","name":"Set DDC2.ServerDT","func":"flow.set('DDC2.ServerDT', '<INSERT Downtime Text Here>');\nnode.status({fill:\"green\",shape:\"dot\",text:\"DDC2.ServerDT: \" +flow.get('DDC2.ServerDT')});","outputs":0,"noerr":0,"initialize":"","finalize":"","x":620,"y":220,"wires":[],"icon":"node-red/cog.svg"},{"id":"b7da3930.73abc8","type":"switch","z":"7dd9dd0e.176be4","name":"Request Type","property":"message.request","propertyType":"msg","rules":[{"t":"eq","v":"!report","vt":"str"},{"t":"eq","v":"!start","vt":"str"},{"t":"eq","v":"!restart","vt":"str"},{"t":"eq","v":"!update","vt":"str"},{"t":"eq","v":"!autostart","vt":"str"},{"t":"eq","v":"!access","vt":"str"},{"t":"eq","v":"!secure","vt":"str"},{"t":"eq","v":"!stop","vt":"str"},{"t":"eq","v":"!status","vt":"str"},{"t":"eq","v":"!lock","vt":"str"},{"t":"eq","v":"!unlock","vt":"str"}],"checkall":"false","repair":false,"outputs":11,"x":1080,"y":460,"wires":[["712d89be.c6aaf8"],["712d89be.c6aaf8"],["712d89be.c6aaf8"],["712d89be.c6aaf8"],["712d89be.c6aaf8"],["2fb83fcd.af67e"],["2fb83fcd.af67e"],["ea67c285.4cee6"],["ea67c285.4cee6"],[],[]],"inputLabels":["Discord Message"],"outputLabels":["!report","!start","!restart","!update","","!access","","!stop","!status","",""],"icon":"font-awesome/fa-map-signs"},{"id":"f954d15c.774d5","type":"function","z":"7dd9dd0e.176be4","name":"CNC-CORE-LOGIC","func":"/*\nThis Node unpacks the msg and does a check that this server is the intended recipient of the message\n*/\n//Moving Message Payload\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n////Initialize Variables\n//Get Flow Variables\nvar DDC2 = flow.get('DDC2');\nvar perms = DDC2.Permissions;\n//Get Message Variables\nvar usrname = msg.author.username;\nvar discordID = msg.author.id;\nvar message = msg.payload;\nvar DiscordRoles = msg.member._roles;\nvar tmstmp = msg.data.createdTimestamp;\nvar localdatetime = (new Date(tmstmp)).toLocaleString();\n//Messge Breakdown\n    var msglow = message.toLowerCase();\n    var splitmsg = msglow.split(\" \",3);\n    var command = splitmsg[0];\n    var server = splitmsg[1];\n    \n    //Setting new Variables\n    msg.message = {\n        \"request\" : command,\n          \"valid\" : false,\n            \"raw\" : msg.payload\n    }\n    \n    var payloaderror = \"Invalid Request recieved: \" +command;\n    var payload = \"\";\n    \n    ////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////Functions\n    /**\n     * @description determine if an array contains one or more items from another array.\n     * @param {array} haystack the array to search.\n     * @param {array} arr the array providing items to check for in the haystack.\n     * @return {boolean} true|false if haystack contains at least one item from arr.\n     */\n    var GrantAccess = function (haystack, arr) {\n        return arr.some(function (v) {\n            return haystack.indexOf(v) >= 0;\n        });\n    };\n    ////////////////////////////////////////////////////////////////////////////////////////////////////\n    \n    \n    if (command == \"!test\") { //All Servers should respond to a test command\n        if (GrantAccess(perms.test,DiscordRoles)) {\n            msg.payload = usrname+\" test message was successfully recieved by server \"+DDC2.ServerID;\n            msg.message.authorized = true;\n            msg.message.valid = true;\n            }\n        else {\n            msg.payload = usrname+\", Access Denied for !test command on server \"+DDC2.ServerID;\n            msg.message.authorized = false;\n            msg.message.valid = true;\n            }\n        if(msg.message.authorized) {return [null,msg,msg]} else {return [null,msg,msg]}\n        }\n    \n    if (server == DDC2.ServerID.toLowerCase()) { //Server ID Check (is this the server the message is looking for?)\n        if (message.charAt(0) == '!') { //This message is a command request\n            payload = payloaderror;\n            msg.message.valid = false;\n            msg.message.request = command;\n            msg.message.server = server;\n           /////////////////////////////////////////////////\n            if (command == \"!info\") {\n                if (GrantAccess(perms.info,DiscordRoles)) {\n                    payload = \"-info\"; //PLACE HOLDER UNTIL INFO TASK BUILT\n                    msg.payload = payload;\n                    msg.message.authorized = true;\n                    msg.message.valid = true;    \n                    return [null,msg,msg,msg];\n                    }\n                else {\n                    msg.message.User = usrname;\n                    msg.message.valid = true;\n                    msg.message.DiscordID = discordID;\n                    return [null,msg,msg,msg];\n                    }\n                }\n            /////////////////////////////////////////////////\n            if (command == \"!status\") {\n                if (GrantAccess(perms.statusV,DiscordRoles)) {\n                    payload = \"-status\";      \n                    msg.payload = payload;\n                    msg.message.authorized = true;\n                    msg.message.valid = true;    \n                    return [msg,msg,msg,null];\n                    }\n                else {\n                    msg.message.valid = true;\n                    return [null,msg,msg,null];\n                    }\n                }\n            /////////////////////////////////////////////////\n            if (command == \"!report\") {\n                if (GrantAccess(perms.report,DiscordRoles)) {\n                    payload = \"-report\";      \n                    msg.payload = payload;\n                    msg.message.authorized = true;\n                    msg.message.valid = true;    \n                    return [msg,msg,msg,null];\n                    }\n                else {\n                    msg.message.User = usrname;\n                    msg.message.valid = true;\n                    msg.message.DiscordID = discordID;\n                    return [null,msg,msg,null];\n                    }\n                }\n            /////////////////////////////////////////////////\n            if (command == \"!start\") {\n                if (GrantAccess(perms.start,DiscordRoles)) {\n                    payload = \"-start\";      \n                    msg.payload = payload;\n                    msg.message.authorized = true;\n                    msg.message.valid = true;    \n                    return [msg,msg,msg,null];\n                    }\n                else {\n                    msg.message.User = usrname;\n                    msg.message.valid = true;\n                    msg.message.DiscordID = discordID;\n                    return [null,msg,msg,null];\n                    }\n                }\n            /////////////////////////////////////////////////\n            if (command == \"!stop\") {\n                if (GrantAccess(perms.stop,DiscordRoles)) {\n                    payload = \"-stop\";      \n                    msg.payload = payload;\n                    msg.message.authorized = true;\n                    msg.message.valid = true;    \n                    return [msg,msg,msg,null];\n                    }\n                else {\n                    msg.message.User = usrname;\n                    msg.message.valid = true;\n                    msg.message.DiscordID = discordID;\n                    return [null,msg,msg,null];\n                    }\n                }\n            /////////////////////////////////////////////////\n            if (command == \"!restart\") {\n                if (GrantAccess(perms.restart,DiscordRoles)) {\n                    payload = \"-restart\";      \n                    msg.payload = payload;\n                    msg.message.authorized = true;\n                    msg.message.valid = true;    \n                    return [msg,msg,msg,null];\n                    }\n                else {\n                    msg.message.User = usrname;\n                    msg.message.valid = true;\n                    msg.message.DiscordID = discordID;\n                    return [null,msg,msg,null];\n                    }\n                }\n            /////////////////////////////////////////////////\n            if (command == \"!update\") {\n                if (GrantAccess(perms.update,DiscordRoles)) {\n                    payload = \"-update\";      \n                    msg.payload = payload;\n                    msg.message.authorized = true;\n                    msg.message.valid = true;    \n                    return [msg,msg,msg,null];\n                    }\n                else {\n                    msg.message.User = usrname;\n                    msg.message.valid = true;\n                    msg.message.DiscordID = discordID;\n                    return [null,msg,msg,null];\n                    }\n                }\n            /////////////////////////////////////////////////\n            if (command == \"!reboot\") {\n                if (GrantAccess(perms.reboot,DiscordRoles)) {\n                    payload = \"-reboot\";      \n                    msg.payload = payload;\n                    msg.message.authorized = true;\n                    msg.message.valid = true;    \n                    return [msg,msg,msg,null];\n                    }\n                else {\n                    msg.message.User = usrname;\n                    msg.message.valid = true;\n                    msg.message.DiscordID = discordID;\n                    return [null,msg,msg,null];\n                    }\n                }\n/////////////////////////////////////////////////\nif (command == \"!access\") {\n    if (GrantAccess(perms.access,DiscordRoles)) {\n        payload = `-access -IP `+splitmsg[2]+` -USER `+usrname+` -ID `+discordID;\n        msg.payload = payload;\n        msg.message.authorized = true;\n        msg.message.valid = true;\n        msg.message.IP = splitmsg[2];\n        if (typeof msg.message.IP === 'undefined') {\n            msg.message.User = usrname;\n            msg.message.valid = false;\n            msg.message.DiscordID = discordID;\n            msg.message.commentLog = `!access request was missing IP address`\n            msg.message.comment = ` \\`\\`\\``+DDC2.ServerID+ ` received an invalid request (`+msg.message.request+`) request. (Missing IP Address)\n\nNOTE: Please use the following syntax: !access `+DDC2.ServerID+` <IPv4Address>\n            \nRequest recieved from ` +usrname+ ` at `+localdatetime+`\\`\\`\\` **Note: Access Information will only appear in the admin channel**`\n            return [null,msg,msg,null];    \n            }\n        else {\n            msg.message.User = usrname;\n            msg.message.valid = true;\n            msg.message.DiscordID = discordID;\n            return [msg,msg,msg,null];    \n            }\n        }\n    else {\n        msg.message.User = usrname;\n        msg.message.valid = true;\n        msg.message.DiscordID = discordID;\n        return [null,msg,msg,null];\n        }\n    }\n/////////////////////////////////////////////////\n}\n}","outputs":4,"noerr":0,"initialize":"","finalize":"","x":400,"y":680,"wires":[["4eaf570a.e411e8"],["8f62baf1.77fbd8"],["44d4e895.cb1df8"],["e09965d5.e52558","34273584.489caa","260a0650.2e51ba"]],"inputLabels":["Post-Whitelist-Check"],"outputLabels":["Process Request","Start Message","Log","!info"]},{"id":"76d0c271.4549fc","type":"function","z":"7dd9dd0e.176be4","name":"Set DDC2.Permissions","func":"var InfoGrpID = \"\"; //Cave Dwellers       - (Info Only User Group)\nvar PwrUsrsID = \"\"; //Server Power Users  - (Server Power User Group)\nvar AdmUsrsID = \"\"; //Server Admnins      - (Server Admin User Group)\n\n//Setting Up Permission Arrays\n\nvar InfoPermArr = [InfoGrpID, PwrUsrsID, AdmUsrsID];\nvar PowrPermArr = [PwrUsrsID, AdmUsrsID];\nvar AdmnPermArr = [AdmUsrsID];\n\n\n//Basic Info Only Commands\nflow.set('DDC2.Permissions.test', InfoPermArr);\nflow.set('DDC2.Permissions.info', InfoPermArr);\n\n//Power User Commands\nflow.set('DDC2.Permissions.report', PowrPermArr);\nflow.set('DDC2.Permissions.statusV', PowrPermArr);\nflow.set('DDC2.Permissions.start', PowrPermArr);\nflow.set('DDC2.Permissions.stop', PowrPermArr);\nflow.set('DDC2.Permissions.restart', PowrPermArr);\n\n//Administrator Commands\nflow.set('DDC2.Permissions.update', AdmnPermArr);\nflow.set('DDC2.Permissions.reboot', AdmnPermArr);\nflow.set('DDC2.Permissions.access', AdmnPermArr);\n\nnode.status({fill:\"green\",shape:\"dot\",text:\"DDC2.Permissions: SET\"});","outputs":0,"noerr":0,"initialize":"","finalize":"","x":620,"y":280,"wires":[],"icon":"node-red/cog.svg"},{"id":"8131ac1d.eac02","type":"change","z":"7dd9dd0e.176be4","name":"Clear ALL Variables","rules":[{"t":"delete","p":"DDC2","pt":"flow"}],"action":"","property":"","from":"","to":"","reg":false,"x":370,"y":40,"wires":[["c8bb41d6.b524f","cf797f0c.5c3b6","d99de4bc.dedfe8","e0b692e6.c9d66","76d0c271.4549fc","35871ef8.597a92","700d02c4.d0631c"]]},{"id":"8f62baf1.77fbd8","type":"function","z":"7dd9dd0e.176be4","name":"Start Task MSG","func":"var MsgSent = context.get('MsgSent') || 1;\nvar DDC2 = flow.get('DDC2');\nvar usrname = msg.author.username;\nvar tmstmp = msg.data.createdTimestamp;\nvar localdatetime = (new Date(tmstmp)).toLocaleString();\nvar newmessage = \"\";\nvar access = \"DENIED\";\nif (msg.message.authorized) {access = \"GRANTED\"}\n//FUNCTIONS////////////////////////////////////////////////////////////////////////////\nfunction pad(num, size) {\n    var s = num+\"\";\n    while (s.length < size) s = \"0\" + s;\n    return s;\n}\nvar accessDENIED = ` \\`\\`\\`!!ACCESS DENIED!! ` +usrname+ ` you do not have access to the `+msg.message.request+` command on server `+DDC2.ServerID+ `, message ignored at `+localdatetime+ ` \\`\\`\\` `\n//END//FUNCTIONS///////////////////////////////////////////////////////////////////////\nif(msg.message.valid) {\n    if(msg.message.request == \"!test\") {\n        if(msg.message.authorized) {\n            newmessage = ` \\`\\`\\``+DDC2.ServerID+ ` successfully received test message from ` +usrname+ ` at `+localdatetime+ ` \\`\\`\\` `\n            }\n        else {\n            newmessage = accessDENIED;\n            }\n        msg.payload = newmessage;\n        }\n    ///////////////////////////////////////////////////////////////////////\n    if(msg.message.request == \"!info\") {\n        if(msg.message.authorized) {\n            newmessage = ` \\`\\`\\``+DDC2.ServerID+ ` has received your request `+usrname+ ` and has begun processing your Info request, please wait.... \\`\\`\\` `\n            }\n        else {\n            newmessage = accessDENIED;\n            }\n        msg.payload = newmessage;\n        }\n    ///////////////////////////////////////////////////////////////////////\n    if(msg.message.request == \"!status\") {\n        if(msg.message.authorized) {\n            newmessage = ` \\`\\`\\``+DDC2.ServerID+ ` has received your request `+usrname+ ` and has begun processing your Status request, please wait.... \\`\\`\\` `\n            }\n        else {\n            newmessage = accessDENIED;\n            }\n        msg.payload = newmessage;\n        }\n    ///////////////////////////////////////////////////////////////////////    \n    if(msg.message.request == \"!report\") {\n        if(msg.message.authorized) {\n            newmessage = ` \\`\\`\\``+DDC2.ServerID+ ` has received your request `+usrname+ ` and has begun processing your Report request, please wait.... \\`\\`\\` **Note: Report Information will only appear in the admin channel**`\n            }\n        else {\n            newmessage = accessDENIED;\n            }\n        msg.payload = newmessage;\n        }\n    ///////////////////////////////////////////////////////////////////////\n    if(msg.message.request == \"!start\") {\n        if(msg.message.authorized) {\n            newmessage = ` \\`\\`\\``+DDC2.ServerID+ ` has received your request `+usrname+ ` and has begun processing your Start request, please wait.... \\`\\`\\` `\n            }\n        else {\n            newmessage = accessDENIED;\n            }\n        msg.payload = newmessage;\n        } \n    ///////////////////////////////////////////////////////////////////////\n    if(msg.message.request == \"!stop\") {\n        if(msg.message.authorized) {\n            newmessage = ` \\`\\`\\``+DDC2.ServerID+ ` has received your request `+usrname+ ` and has begun processing your Stop request, please wait.... \\`\\`\\` `\n            }\n        else {\n            newmessage = accessDENIED;\n            }\n        msg.payload = newmessage;\n        }\n    ///////////////////////////////////////////////////////////////////////\n    if(msg.message.request == \"!restart\") {\n        if(msg.message.authorized) {\n            newmessage = ` \\`\\`\\``+DDC2.ServerID+ ` has received your request `+usrname+ ` and has begun processing your Restart request, please wait.... \\`\\`\\` `\n            }\n        else {\n            newmessage = accessDENIED;\n            }\n        msg.payload = newmessage;\n        }\n    ///////////////////////////////////////////////////////////////////////\n    if(msg.message.request == \"!update\") {\n        if(msg.message.authorized) {\n            newmessage = ` \\`\\`\\``+DDC2.ServerID+ ` has received your request `+usrname+ ` and has begun processing your Update request, please wait.... \\`\\`\\` `\n            }\n        else {\n            newmessage = accessDENIED;\n            }\n        msg.payload = newmessage;\n        }\n    ///////////////////////////////////////////////////////////////////////\n    if(msg.message.request == \"!reboot\") {\n        if(msg.message.authorized) {\n            newmessage = ` \\`\\`\\``+DDC2.ServerID+ ` has received your request `+usrname+ ` and has begun processing your Reboot request, please wait.... \\`\\`\\` `\n            }\n        else {\n            newmessage = accessDENIED;\n            }\n        msg.payload = newmessage;\n        }\n    ///////////////////////////////////////////////////////////////////////\n    if(msg.message.request == \"!access\") {\n        if(msg.message.authorized) {\n            newmessage = ` \\`\\`\\``+DDC2.ServerID+ ` has received your request `+usrname+ ` and has begun processing your Access request, please wait.... \\`\\`\\` **Note: Access Information will only appear in the admin channel**`\n            }\n        else {\n            newmessage = accessDENIED;\n            }\n        msg.payload = newmessage;\n        }\n    ///////////////////////////////////////////////////////////////////////\n    if(msg.message.request == \"!autostart\") {\n        if(msg.message.authorized) {\n            newmessage = ` \\`\\`\\``+DDC2.ServerID+ ` has initialized a self AutoStart at `+localdatetime+ ` \\`\\`\\` `\n            }\n        else {\n            newmessage = accessDENIED;\n            }\n        msg.payload = newmessage;\n        }\n    }\nelse \n    {\n    newmessage = ` \\`\\`\\``+DDC2.ServerID+ ` received an invalid request (`+msg.message.request+`) from ` +usrname+ ` at `+localdatetime+ ` \\`\\`\\` `\n    if (!(typeof msg.message.comment === 'undefined')) {newmessage = msg.message.comment}\n    msg.payload = newmessage;\n    }\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1080,"y":600,"wires":[["d8f13f1e.132fd"]],"inputLabels":["CnC-CORE"],"outputLabels":["Server-Status"],"icon":"node-red/envelope.svg"},{"id":"44d4e895.cb1df8","type":"function","z":"7dd9dd0e.176be4","name":"Send Log MSG","func":"var MsgSent = context.get('MsgSent') || 1;\nvar DDC2 = flow.get('DDC2');\nvar usrname = msg.author.username;\nvar tmstmp = msg.data.createdTimestamp;\nvar localdatetime = (new Date(tmstmp)).toLocaleString();\nvar newmessage = \"\";\nvar access = \"DENIED\";\nif (msg.message.authorized) {access = \"GRANTED\"}\n//LOG/SECTION//////////////////////////////////////////////////////////////////////////\nvar logmsg = ``;\nvar commentLog = ``;\nif(msg.message.valid) {\n    if (!(typeof msg.message.commentLog === 'undefined')) {commentLog = msg.message.commentLog} else {commentLog = `Request Received`}\n    logmsg = ` \\`\\`\\`    TimeStamp: ` +localdatetime+ `\n     RequestID: `+msg._msgid+`\n     Requestor: `+usrname+ `\n  Request Type: ` +msg.message.request+ `\n       Raw Msg: `+msg.message.raw+`\n     Responder: ` +DDC2.ServerID+ `\n        Access: ` +access+ `\n      Comments: `+commentLog+` \\`\\`\\` `\n    }\nelse {\n    if (!(typeof msg.message.commentLog === 'undefined')) {commentLog = msg.message.commentLog} else {commentLog = msg.message.request+` is not a valid request`}\n    logmsg = ` \\`\\`\\`     TimeStamp: ` +localdatetime+ `\n       RequestID: `+msg._msgid+`\n         Raw Msg: `+msg.message.raw+`\n       Requestor: `+usrname+ `\n    Request Type: ` +msg.message.request+ `\n       Responder: ` +DDC2.ServerID+ `\n          Access: ` +access+ `\n        Comments: `+commentLog+` \\`\\`\\` `\n    }\n//END/LOG/SECTION//////////////////////////////////////////////////////////////////////\nvar LogChan = {\n    \"id\": DDC2.Channel.Log\n    }\nvar logsend = {\n    \"payload\": logmsg,\n    \"channel\": LogChan\n    }\nnode.status({fill:\"green\",shape:\"ring\",text: \"Log Entries Sent: \"+MsgSent});\ncontext.set('MsgSent', (MsgSent + 1));\nreturn logsend;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1320,"y":720,"wires":[["d8f13f1e.132fd"]],"inputLabels":["CnC-CORE"],"outputLabels":["Server-Status"],"icon":"node-red/envelope.svg"},{"id":"4eaf570a.e411e8","type":"exec","z":"7dd9dd0e.176be4","command":"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -ExecutionPolicy Bypass -File \"G:\\GameServer\\DDC2\\ddc2.ps1\"","addpay":true,"append":"","useSpawn":"false","timer":"","oldrc":false,"name":"PowerShell","x":610,"y":480,"wires":[["72e50dc7.306dc4"],[],[]],"inputLabels":["Input"],"outputLabels":["Standard Out","Error Out","Returned Values"],"icon":"font-awesome/fa-file-powerpoint-o"},{"id":"e09965d5.e52558","type":"function","z":"7dd9dd0e.176be4","name":"!info Admin","func":"var MsgSent = context.get('MsgSent') || 1;\nvar DDC2 = flow.get('DDC2');\nvar usrname = msg.author.username; \nvar responsee = (msg.author.id === DDC2.ServerID) ? msg.author.id : \"<@\"+msg.author.id+\">\" \n//FUNCTIONS////////////////////////////////////////////////////////////////////////////\nfunction pad(num, size) {\n    var s = num+\"\";\n    while (s.length < size) s = \"0\" + s;\n    return s;\n}\nDate.daysBetween = function( date1, date2 ) {\n  var one_day=1000*60*60*24;\n  var date1_ms = date1.getTime();\n  var date2_ms = date2.getTime();\n  var difference_ms = date2_ms - date1_ms;\n  difference_ms = Math.round(difference_ms/1000,3);\n  var mseconds = difference_ms % 1000;\n  var seconds = Math.floor(difference_ms % 60);\n  difference_ms = difference_ms/60; \n  var minutes = Math.floor(difference_ms % 60);\n  difference_ms = difference_ms/60; \n  var hours = Math.floor(difference_ms % 24);  \n  var days = Math.floor(difference_ms/24);\n  return pad(minutes,2) + ':' + pad(seconds,2) + '.' + pad(mseconds,3);\n}\nfunction GetPriority(priority) {\nvar PriorityTable = { 64:\"Low\", \n                   16384:\"Below Normal\", \n                      32:\"Normal\", \n                   32768:\"Above Normal\", \n                     128:\"High\",\n\t\t\t\t\t 256:\"Realtime\"\n\t\t\t\t\t};\nreturn (PriorityTable[priority])\n}\n//END//FUNCTIONS///////////////////////////////////////////////////////////////////////\n\nif(msg.channel.id == DDC2.Channel.Admin) {\nvar request = msg.message.request; \nif(request == \"!info\") {\nvar localdatetime = (new Date(msg.data.createdTimestamp)).toLocaleString();\nvar InfoOK = DDC2.Info.Bool;\nvar serverMSG = ``;\nif(InfoOK) {\n    var tmstmp = DDC2.Info.TimeStamp\n    var ttc = Date.daysBetween((new Date(msg.data.createdTimestamp)), new Date());\n    var reportage = Date.daysBetween((new Date(tmstmp)), new Date());\n    var reportdatetime = (new Date(tmstmp)).toLocaleString();\n    var PS = flow.get('DDC2.Info.PS');\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        \n//GAME PROCESSES////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//DCS\nvar dcsok = \"OFFLINE\";\nvar dcs = \"\";\n    if(PS.Status.Game.DCS.IsActive) {if(PS.Status.Game.DCS.Responding) {dcsok = `OK`} else {dcsok = `NOT RESPONDING`}}\n        dcs = `\n              #### DCS   INFO ####\n     DCS Server Status : `+dcsok+`\n    InGame Server Name : `+PS.Details.Config.DCS.ServerName+`\n               Version : `+PS.Details.Config.DCS.Version+`\n           Server Port : `+PS.Details.Config.DCS.Port+`\n              Password : `+PS.Details.Config.DCS.Passwrd+`\n      Max Ping Allowed : `+PS.Details.Config.DCS.MaxPing+`ms\n\n          ##### LotATC   INFO ####\n        LotATC Version : `+PS.Details.Config.LotATC.Version+`\n           LotATC Port : `+PS.Details.Config.LotATC.Port+`\n              Blue Pwd : `+PS.Details.Config.LotATC.BluPWD+`\n               Red Pwd : `+PS.Details.Config.LotATC.RedPWD+`\n\n          #### TACview   INFO ####\n               Version : `+PS.Details.Config.Tacview.Version+`\n          TACview Port : `+PS.Details.Config.DCS.Port+`\n                 Delay : `+PS.Details.Config.Tacview.Delay+`\n            Client Pwd : `+PS.Details.Config.Tacview.ClientPWD\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        \n//SRS            \nvar srsok = \"OFFLINE\";\nvar srs = \"\";\n    if(PS.Status.Game.SRS.IsActive) {if(PS.Status.Game.SRS.Responding) {srsok = `OK`} else {srsok = `NOT RESPONDING`}}\n        srs = `\n              #### SRS   INFO ####\n                Status : `+srsok+`\n               Version : `+PS.Details.Config.SRS.Version+`\n           Server Port : `+PS.Details.Config.SRS.Port+`\n              Blue Pwd : `+PS.Details.Config.SRS.BluPWD+`\n               Red Pwd : `+PS.Details.Config.SRS.RedPWD\n\n    serverMSG = `\n           #### SERVER   INFO ####\n             DDC2 Name : `+DDC2.ServerID+`\n       Server DownTime : `+DDC2.ServerDT+`\n             Server IP : `+PS.Details.Info.IPAddr+`\n      Last Report Done : `+reportdatetime+`\n              Data Age : `+reportage\n    }\nelse {\n    serverMSG = `No variables currently set, please run a !report to populate flow variables`\n    }\n\nvar transmit = `Requested by `+responsee+` \\`\\`\\`ADMIN CAHCED INFO REPORT for ` +DDC2.ServerID+ ` as at ` +localdatetime+`\n `+serverMSG+` \n `+dcs+`\n `+srs+`\n \\`\\`\\`*Request completed in `+ttc+`*` \n//LOG/SECTION//////////////////////////////////////////////////////////////////////////\nvar access = \"DENIED\";\nif (msg.message.authorized) {access = \"GRANTED\"}\nvar LogChan = {\n    \"id\": DDC2.Channel.Log\n    }\nvar logmsg = ` \\`\\`\\`    TimeStamp: ` +localdatetime+ `\n     RequestID: `+msg._msgid+`\n     Requestor: `+usrname+ `\n  Request Type: ` +msg.message.request+ `\n       Raw Msg: `+msg.message.raw+`\n     Responder: ` +DDC2.ServerID+ `\n        Access: ` +access+ `\n      Comments: Request completed in `+ttc+`\\`\\`\\` `\nvar logsend = {\n    \"payload\": logmsg,\n    \"channel\": LogChan\n    };\n//TRANSMIT/SECTION/////////////////////////////////////////////////////////////////////\nmsg.payload = transmit\n\nnode.status({fill:\"green\",shape:\"ring\",text: \"Reports Sent: \"+MsgSent});\ncontext.set('MsgSent', (MsgSent + 1));\n\nreturn [[msg],[logsend]];\n    }\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","x":1330,"y":780,"wires":[["d8f13f1e.132fd"],["d8f13f1e.132fd"]],"inputLabels":["Powershell Output"],"outputLabels":["Server-Status","Server-Log"],"icon":"node-red/envelope.svg"},{"id":"712d89be.c6aaf8","type":"function","z":"7dd9dd0e.176be4","name":"!report Admin MSG","func":"var MsgSent = context.get('MsgSent') || 1;\nvar DDC2 = flow.get('DDC2');\nvar usrname = msg.author.username; \nvar responsee = (msg.author.id === DDC2.ServerID) ? msg.author.id : \"<@\"+msg.author.id+\">\" \n//var responsee = if (msg.author.id != DCSCNC.ServerID) {\"<@\"+msg.author.id+\">\"} else {msg.author.id};\n//var responsee = \"<@\"+msg.author.id+\">\"; \nvar request = msg.message.request; \n\nvar tmstmp = msg.data.createdTimestamp;\nvar localdatetime = (new Date(tmstmp)).toLocaleString();\n\n//FUNCTIONS////////////////////////////////////////////////////////////////////////////\nfunction pad(num, size) {\n    var s = num+\"\";\n    while (s.length < size) s = \"0\" + s;\n    return s;\n}\nDate.daysBetween = function( date1, date2 ) {\n  var one_day=1000*60*60*24;\n  var date1_ms = date1.getTime();\n  var date2_ms = date2.getTime();\n  var difference_ms = date2_ms - date1_ms;\n  difference_ms = Math.round(difference_ms/1000,3);\n  var mseconds = difference_ms % 1000;\n  var seconds = Math.floor(difference_ms % 60);\n  difference_ms = difference_ms/60; \n  var minutes = Math.floor(difference_ms % 60);\n  difference_ms = difference_ms/60; \n  var hours = Math.floor(difference_ms % 24);  \n  var days = Math.floor(difference_ms/24);\n  return pad(minutes,2) + ':' + pad(seconds,2) + '.' + pad(mseconds,3);\n}\nfunction GetPriority(priority) {\nvar PriorityTable = { 64:\"Low\", \n                   16384:\"Below Normal\", \n                      32:\"Normal\", \n                   32768:\"Above Normal\", \n                     128:\"High\",\n\t\t\t\t\t 256:\"Realtime\"\n\t\t\t\t\t};\nreturn (PriorityTable[priority])\n}\n//END//FUNCTIONS///////////////////////////////////////////////////////////////////////\nif((request == \"!report\") || (request == \"!start\") || (request == \"!restart\") || (request == \"!update\") || (request == \"!autostart\")) {\nflow.set('DDC2.Info.PS',msg.PS);\nflow.set('DDC2.Info.Bool',true);\nflow.set('DDC2.Info.TimeStamp',tmstmp);\nvar ttc = Date.daysBetween((new Date(tmstmp)), new Date());\n//SERVER DETAILS\nvar serverMSG = `\n           #### SERVER   INFO ####\n             DDC2 Name : `+DDC2.ServerID+`\n       Windows Version : `+msg.PS.Details.Info.WinVer+`\n              CPU Type : `+msg.PS.Details.Info.CPUType+`\n             Total RAM : `+msg.PS.Details.Info.TotalMem+`GB\n         Server UpTime : `+pad(msg.PS.Details.Info.UpTime.Days,2)+ `:`+pad(msg.PS.Details.Info.UpTime.Hours,2)+`:`+pad(msg.PS.Details.Info.UpTime.Minutes,2)+`:`+pad(msg.PS.Details.Info.UpTime.Seconds,2)+`\n       Server DownTime : `+DDC2.ServerDT+`\n             Server IP : `+msg.PS.Details.Info.IPAddr+`\n      Server ISP Speed : `+DDC2.HostedBy.ISP.Speed+`\n            Server ISP : `+DDC2.HostedBy.ISP.Name+`\n   Remote Desktop Port : `+msg.PS.Details.Info.RDPport+`\n      Server Hosted By : `+DDC2.HostedBy.Name+`\n           Memory Load : `+msg.PS.Details.Info.MEMLoad+` %\n              CPU Load : `+msg.PS.Details.Info.CPULoad+` %`\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//UPDATERS//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//DCS Updater\nvar dcsUpdateok = \"INACTIVE\";\nvar dcsUpdate = \"\";\n    if(msg.PS.Status.Update.DCS_updater.IsActive) {\n\t\tif(msg.PS.Status.Update.DCS_updater.Responding) {dcsUpdateok = `RUNNING`} else {dcsUpdateok = `NOT RESPONDING`}\n    dcsUpdate = `\n           #### UPDATE   INFO ####\n\n     DCS Update Status : `+dcsUpdateok+`\n      DCS Update Ticks : `+msg.PS.Status.Update.DCS_updater.Ticks+`\n       DCS Update Time : `+pad(msg.PS.Status.Update.DCS_updater.RunTime.Days,2)+ `:`+pad(msg.PS.Status.Update.DCS_updater.RunTime.Hours,2)+`:`+pad(msg.PS.Status.Update.DCS_updater.RunTime.Minutes,2)+`:`+pad(msg.PS.Status.Update.DCS_updater.RunTime.Seconds,2)\n        }\n    else {\n      dcsUpdate = `\n           #### UPDATE   INFO ####\n           \n     DCS Update Status : `+dcsUpdateok\n        }\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//SRS Updater\nvar srsUpdateok = \"INACTIVE\";\nvar srsUpdate = \"\";\n    if(msg.PS.Status.Update.SRS_Updater.IsActive) {\n\t\tif(msg.PS.Status.Update.SRS_updater.Responding) {srsUpdateok = `RUNNING`} else {srsUpdateok = `NOT RESPONDING`}\n    srsUpdate = `\n     SRS Update Status : `+srsUpdateok+`\n      SRS Update Ticks : `+msg.PS.Status.Update.SRS_updater.Ticks+`\n       SRS Update Time : `+pad(msg.PS.Status.Update.SRS_updater.RunTime.Days,2)+ `:`+pad(msg.PS.Status.Update.SRS_updater.RunTime.Hours,2)+`:`+pad(msg.PS.Status.Update.SRS_updater.RunTime.Minutes,2)+`:`+pad(msg.PS.Status.Update.SRS_updater.RunTime.Seconds,2)\n        }\n    else {\n      srsUpdate = `\n     SRS Update Status : `+srsUpdateok\n        }\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//LotATC Updater\nvar lotUpdateok = \"INACTIVE\";\nvar lotUpdate = \"\";\n    if(msg.PS.Status.Update.LOT_Updater.IsActive) {\n\t\tif(msg.PS.Status.Update.LOT_updater.Responding) {lotUpdateok = `RUNNING`} else {lotUpdateok = `NOT RESPONDING`}\n    lotUpdate = `\n  LotATC Update Status : `+lotUpdateok+`\n   LotATC Update Ticks : `+msg.PS.Status.Update.LOT_updater.Ticks+`\n    LotATC Update Time : `+pad(msg.PS.Status.Update.LOT_updater.RunTime.Days,2)+ `:`+pad(msg.PS.Status.Update.LOT_updater.RunTime.Hours,2)+`:`+pad(msg.PS.Status.Update.LOT_updater.RunTime.Minutes,2)+`:`+pad(msg.PS.Status.Update.LOT_updater.RunTime.Seconds,2)\n        }\n    else {\n      lotUpdate = `\n  LotATC Update Status : `+lotUpdateok\n        }\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        \n//GAME PROCESSES////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//DCS\nvar dcsok = \"OFFLINE\";\nvar dcs = \"\";\n    if(msg.PS.Status.Game.DCS.IsActive) {\n\t\tif(msg.PS.Status.Game.DCS.Responding) {dcsok = `OK`} else {dcsok = `NOT RESPONDING`}\n        dcs = `\n              #### DCS   INFO ####\n     DCS Server Status : `+dcsok+`\n    InGame Server Name : `+msg.PS.Details.Config.DCS.ServerName+`\n               Version : `+msg.PS.Details.Config.DCS.Version+`\n            DCS UpTime : `+pad(msg.PS.Status.Game.DCS.RunTime.Days,2)+ `:`+pad(msg.PS.Status.Game.DCS.RunTime.Hours,2)+`:`+pad(msg.PS.Status.Game.DCS.RunTime.Minutes,2)+`:`+pad(msg.PS.Status.Game.DCS.RunTime.Seconds,2)+`\n      Process Priority : `+GetPriority(msg.PS.Status.Game.DCS.PriorityClass)+`\n           Server Port : `+msg.PS.Details.Config.DCS.Port+`\n              Password : `+msg.PS.Details.Config.DCS.Passwrd+`\n           Max Players : `+msg.PS.Details.Config.DCS.MaxPlayers+`\n      Max Ping Allowed : `+msg.PS.Details.Config.DCS.MaxPing+`ms\n\n          ##### LotATC   INFO ####\n        LotATC Version : `+msg.PS.Details.Config.LotATC.Version+`\n           LotATC Port : `+msg.PS.Details.Config.LotATC.Port+`\n              Blue Pwd : `+msg.PS.Details.Config.LotATC.BluPWD+`\n               Red Pwd : `+msg.PS.Details.Config.LotATC.RedPWD+`\n\n          #### TACview   INFO ####\n               Version : `+msg.PS.Details.Config.Tacview.Version+`\n          TACview Port : `+msg.PS.Details.Config.Tacview.Port+`\n                 Delay : `+msg.PS.Details.Config.Tacview.Delay+`\n            Client Pwd : `+msg.PS.Details.Config.Tacview.ClientPWD\n        }\n    else {\n        dcs = `\n              #### DCS   INFO ####\n     DCS Server Status : `+dcsok+`\n    InGame Server Name : `+msg.PS.Details.Config.DCS.ServerName+`\n               Version : `+msg.PS.Details.Config.DCS.Version+`\n           Server Port : `+msg.PS.Details.Config.DCS.Port+`\n              Password : `+msg.PS.Details.Config.DCS.Passwrd+`\n           Max Players : `+msg.PS.Details.Config.DCS.MaxPlayers+`\n      Max Ping Allowed : `+msg.PS.Details.Config.DCS.MaxPing+`ms\n    \n           #### LotATC   INFO ####\n               Version : `+msg.PS.Details.Config.LotATC.Version+`\n           LotATC Port : `+msg.PS.Details.Config.LotATC.Port+`\n              Blue Pwd : `+msg.PS.Details.Config.LotATC.BluPWD+`\n               Red Pwd : `+msg.PS.Details.Config.LotATC.RedPWD+`\n    \n          #### TACview   INFO ####\n       TACview Version : `+msg.PS.Details.Config.Tacview.Version+`\n          TACview Port : `+msg.PS.Details.Config.Tacview.Port+`\n                 Delay : `+msg.PS.Details.Config.Tacview.Delay+`\n            Client Pwd : `+msg.PS.Details.Config.Tacview.ClientPWD\n        }\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        \n//SRS            \nvar srsok = \"OFFLINE\";\nvar srs = \"\";\n    if(msg.PS.Status.Game.SRS.IsActive) {\n\t\tif(msg.PS.Status.Game.SRS.Responding) {srsok = `OK`} else {srsok = `NOT RESPONDING`}\n        srs = `\n              #### SRS   INFO ####\n                Status : `+srsok+`\n               Version : `+msg.PS.Details.Config.SRS.Version+`\n            SRS UpTime : `+pad(msg.PS.Status.Game.SRS.RunTime.Days,2)+ `:`+pad(msg.PS.Status.Game.SRS.RunTime.Hours,2)+`:`+pad(msg.PS.Status.Game.SRS.RunTime.Minutes,2)+`:`+pad(msg.PS.Status.Game.SRS.RunTime.Seconds,2)+`\n      Process Priority : `+GetPriority(msg.PS.Status.Game.SRS.PriorityClass)+`\n           Server Port : `+msg.PS.Details.Config.SRS.Port+`\n              Blue Pwd : `+msg.PS.Details.Config.SRS.BluPWD+`\n               Red Pwd : `+msg.PS.Details.Config.SRS.RedPWD\n        }\n    else {\n        srs = `\n              #### SRS   INFO ####\n                Status : `+srsok+`\n               Version : `+msg.PS.Details.Config.SRS.Version+`\n           Server Port : `+msg.PS.Details.Config.SRS.Port+`\n              Blue Pwd : `+msg.PS.Details.Config.SRS.BluPWD+`\n               Red Pwd : `+msg.PS.Details.Config.SRS.RedPWD\n        }\n\nvar transmit = `Requested by `+responsee+` \\`\\`\\` DETAILED REPORT for ` +DDC2.ServerID+ ` as at ` +localdatetime+`\n `+serverMSG+` \n `+dcs+`\n `+srs+`\n `+dcsUpdate+`\n `+srsUpdate+`\n `+lotUpdate+`\n  \\`\\`\\`*Request completed in `+ttc+`*` \n//LOG/SECTION//////////////////////////////////////////////////////////////////////////\nvar access = \"DENIED\";\nif (msg.message.authorized) {access = \"GRANTED\"}\nvar logmsg = ` \\`\\`\\`    TimeStamp: ` +localdatetime+ `\n     RequestID: `+msg._msgid+`\n     Requestor: `+usrname+ `\n  Request Type: ` +msg.message.request+ `\n       Raw Msg: `+msg.message.raw+`\n     Responder: ` +DDC2.ServerID+ `\n        Access: ` +access+ `\n      Comments: Request completed in `+ttc+`\\`\\`\\` `\nvar logsend = {\"payload\": logmsg};\n//TRANSMIT/SECTION/////////////////////////////////////////////////////////////////////\nmsg.payload = transmit\n\nnode.status({fill:\"green\",shape:\"ring\",text: \"Reports Sent: \"+MsgSent});\ncontext.set('MsgSent', (MsgSent + 1));\n\nreturn [[msg],[logsend]];\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","x":1410,"y":360,"wires":[["8e5e8980.4ec618"],["c01e3041.02207"]],"inputLabels":["Powershell Output"],"outputLabels":["Server-Status","Server-Log"],"icon":"node-red/envelope.svg"},{"id":"72e50dc7.306dc4","type":"json","z":"7dd9dd0e.176be4","name":"","property":"payload","action":"","pretty":false,"x":750,"y":480,"wires":[["86ba010b.5e4f1"]]},{"id":"86ba010b.5e4f1","type":"change","z":"7dd9dd0e.176be4","name":"MovePS Output","rules":[{"t":"move","p":"payload","pt":"msg","to":"PS","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":880,"y":520,"wires":[["b7da3930.73abc8"]]},{"id":"3f4eab96.e46bf4","type":"delay","z":"7dd9dd0e.176be4","name":"Delay x","pauseType":"delayv","timeout":"60","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":260,"y":480,"wires":[["4eaf570a.e411e8"]]},{"id":"f699609e.e4948","type":"rbe","z":"7dd9dd0e.176be4","name":"","func":"rbe","gap":"","start":"","inout":"out","property":"payload","x":1450,"y":420,"wires":[["8e5e8980.4ec618"]]},{"id":"2fb83fcd.af67e","type":"function","z":"7dd9dd0e.176be4","name":"!access MSG","func":"var MsgSent = context.get('MsgSent') || 1;\nvar DDC2 = flow.get('DDC2');\nvar usrname = msg.author.username;\nvar responsee = \"<@\"+msg.author.id+\">\";\nvar tmstmp = msg.data.createdTimestamp;\nvar localdatetime = (new Date(tmstmp)).toLocaleString();\nvar msgLOG = msg;\nvar StatusMSG = {\"payload\" : ``};\n//var LogMSG = {\"payload\" : ``};\n//FUNCTIONS////////////////////////////////////////////////////////////////////////////\nfunction pad(num, size) {\n    var s = num+\"\";\n    while (s.length < size) s = \"0\" + s;\n    return s;\n}\nDate.daysBetween = function( date1, date2 ) {\n  var one_day=1000*60*60*24;\n  var date1_ms = date1.getTime();\n  var date2_ms = date2.getTime();\n  var difference_ms = date2_ms - date1_ms;\n  difference_ms = Math.round(difference_ms/1000,3);\n  var mseconds = difference_ms % 1000;\n  var seconds = Math.floor(difference_ms % 60);\n  difference_ms = difference_ms/60; \n  var minutes = Math.floor(difference_ms % 60);\n  difference_ms = difference_ms/60; \n  var hours = Math.floor(difference_ms % 24);  \n  var days = Math.floor(difference_ms/24);\n  return pad(minutes,2) + ':' + pad(seconds,2) + '.' + pad(mseconds,3);\n}\n//END//FUNCTIONS///////////////////////////////////////////////////////////////////////\nif((msg.message.request == \"!access\") || (msg.message.request == \"!secure\")) {\n    var ttc = Date.daysBetween((new Date(tmstmp)), new Date());\n    if(msg.message.request == \"!access\") { //Finalizing Initial Run through: Message 1\n        flow.set('DDC2.Connected', false)\n        if(msg.PS.ValidIP === true) { //Access Granted\n            msg.message.request = \"!secure\";\n            msg.message.payload = `-secure -IP `+msg.message.IP+` -USER `+msg.message.User+` -ID `+msg.message.DiscordID; //Shows the next message to be sent to the script\n            msg.payload = msg.message.payload; //Loop MSG\n            msg.message.commentLog = 'Firewall rule created for '+msg.message.User+`(DiscordID: `+msg.message.DiscordID+`)`\n///////////////////////////////////////////////////////////////////////////////////////\n            payload = ` \\`\\`\\``+DDC2.ServerID+ ` has granted access to `+msg.message.User+`, door's open, come on in...\n\nConnection information: `+DDC2.Info.PS.Details.Info.IPAddr+`:`+DDC2.Info.PS.Details.Info.RDPport+`\n        \nRequest completed in `+ttc+`\\`\\`\\` `\n///////////////////////////////////////////////////////////////////////////////////////\n            StatusMSG.payload = payload; //Status MSG\n            node.status({fill:\"green\",shape:\"ring\",text: \"Status Sent: \"+MsgSent});\n            context.set('MsgSent', (MsgSent + 1));\n            return [StatusMSG,msg,msg];\n            }\n        else { //Access Denied (Invalid IP) End Loop\n            msg.message.commentLog = `Invalid IPv4 Address (`+msg.PS.IP+`) supplied, no Firewall rule was created for `+msg.message.User\n///////////////////////////////////////////////////////////////////////////////////////\n            payload = ` \\`\\`\\``+DDC2.ServerID+ ` received an invalid request (`+msg.message.request+`) request. (IP `+msg.PS.IP+` is not a valid IPv4 Address)\n\nNOTE: Please use the following syntax: !access `+DDC2.ServerID+` <IPv4Address>\n\nRequest completed in `+ttc+`\\`\\`\\` `\n///////////////////////////////////////////////////////////////////////////////////////\n            StatusMSG.payload = payload; //Status MSG\n            node.status({fill:\"green\",shape:\"ring\",text: \"Status Sent: \"+MsgSent});\n            context.set('MsgSent', (MsgSent + 1));\n            return [StatusMSG,msg,null]; //Don't send back to loop\n            }\n        }\n    if(msg.message.request == \"!secure\") { //Message 2 / 3\n        if(msg.PS.Connected === true) {\n            flow.set('DDC2.Connected', true)\n            msg.message.request = \"!secure\";\n            msg.message.payload = `-secure -IP `+msg.message.IP+` -USER `+msg.message.User+` -ID `+msg.message.DiscordID; //Shows the next message to be sent to the script\n            msg.payload = msg.message.payload; //Loop MSG\n            msg.message.commentLog = msg.message.User+` has connected to `+DDC2.ServerID\n///////////////////////////////////////////////////////////////////////////////////////\n            payload = ` \\`\\`\\``+msg.message.User+ ` has successfully connected to `+DDC2.ServerID+`\\`\\`\\` `\n///////////////////////////////////////////////////////////////////////////////////////\n            StatusMSG.payload = payload; //Status MSG\n            node.status({fill:\"green\",shape:\"ring\",text: \"Status Sent: \"+MsgSent});\n            context.set('MsgSent', (MsgSent + 1));\n            return [StatusMSG,msg,msg];\n            }\n        if(msg.PS.Connected === false) {\n            if(DDC2.Connected === true) { //User was connected but now is not\n                flow.set('DDC2.Connected', false)\n///////////////////////////////////////////////////////////////////////////////////////\n                payload = ` \\`\\`\\``+msg.message.User+ `, it was good to see you. Thanks for stopping by for approximately `+ttc+`. \n`+DDC2.ServerID+` has locked the door....\\`\\`\\` `\n///////////////////////////////////////////////////////////////////////////////////////\n                StatusMSG.payload = payload; //Status MSG\n                msg.message.commentLog = msg.message.User+` has disconnected from `+DDC2.ServerID+`, they were connected for approximately `+ttc\n                node.status({fill:\"green\",shape:\"ring\",text: \"Status Sent: \"+MsgSent});\n                context.set('MsgSent', (MsgSent + 1));\n                return [StatusMSG,msg,null];\n                }\n            else { //User never connected\n                flow.set('DDC2.Connected', false)\n///////////////////////////////////////////////////////////////////////////////////////\n                payload = ` \\`\\`\\``+msg.message.User+ ` obviously had something better to do, no connection was established. \n`+DDC2.ServerID+` has locked the door....\\`\\`\\` `\n///////////////////////////////////////////////////////////////////////////////////////\n                StatusMSG.payload = payload; //Status MSG\n                msg.message.commentLog = msg.message.User+` never connected to `+DDC2.ServerID\n                node.status({fill:\"green\",shape:\"ring\",text: \"Status Sent: \"+MsgSent});\n                context.set('MsgSent', (MsgSent + 1));\n                return [StatusMSG,msg,null];\n                }\n            }\n        }\n    }","outputs":3,"noerr":0,"initialize":"","finalize":"","x":1290,"y":460,"wires":[["f699609e.e4948"],["9dd8408a.550e4"],["73af1984.2ad088"]],"inputLabels":["Powershell Output"],"outputLabels":["Server-Status","Server-Log","Loop"],"icon":"node-red/envelope.svg"},{"id":"9dd8408a.550e4","type":"rbe","z":"7dd9dd0e.176be4","name":"","func":"rbe","gap":"","start":"","inout":"out","property":"message.commentLog","x":1451,"y":460,"wires":[["44d4e895.cb1df8"]]},{"id":"73af1984.2ad088","type":"link out","z":"7dd9dd0e.176be4","name":"AccessLoopv2","links":["8a640ac8.9be5b8"],"x":1415,"y":500,"wires":[]},{"id":"8a640ac8.9be5b8","type":"link in","z":"7dd9dd0e.176be4","name":"AccessLoopv2","links":["73af1984.2ad088"],"x":155,"y":480,"wires":[["3f4eab96.e46bf4"]]},{"id":"9bac56c5.32c638","type":"inject","z":"7dd9dd0e.176be4","name":"AutoStart","repeat":"","crontab":"","once":true,"onceDelay":"1","topic":"","payload":"true","payloadType":"bool","x":120,"y":600,"wires":[["90e7032.833b8"]]},{"id":"90e7032.833b8","type":"delay","z":"7dd9dd0e.176be4","name":"","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":260,"y":560,"wires":[["5f91d59b.07e29c"]]},{"id":"5f91d59b.07e29c","type":"function","z":"7dd9dd0e.176be4","name":"Task Start MSG","func":"//This Node unpacks the msg and does a check that this server is the checks that the server that has been requested is this server\nvar payload = \"-update\"; //Changed while testing (Switch between -report or -update)\nmsg.payload = payload;\nvar DDC2 = flow.get('DDC2');\nvar permArr = flow.get('DDC2.Permissions.reboot');\n\nmsg.member = {\n    \"_roles\" : permArr\n    }\nmsg.author = {\n        \"username\": DDC2.ServerID,\n        \"id\": DDC2.ServerID\n    }\nmsg.message = {\n    \"request\": \"!autostart\",\n    \"raw\" : \"!autostart\",\n    \"valid\": true,\n    \"authorized\" : true\n    }\nmsg.data = {\n    \"createdTimestamp\": Date.now()\n    }\nmsg.channel = {\n    \"id\": DDC2.Channel.Admin\n    }\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":420,"y":600,"wires":[["8f62baf1.77fbd8","4eaf570a.e411e8","44d4e895.cb1df8"]],"inputLabels":["Post-Whitelist-Check"],"outputLabels":["Standard Out"]},{"id":"6e21d672.0e8f28","type":"discordMessage","z":"7dd9dd0e.176be4","name":"Get Message","token":"","x":170,"y":680,"wires":[["f954d15c.774d5"]]},{"id":"8e5e8980.4ec618","type":"discordSendMessage","z":"7dd9dd0e.176be4","name":"Admin Channel","channel":"567983599408775168","token":"","x":1640,"y":420,"wires":[]},{"id":"c01e3041.02207","type":"discordSendMessage","z":"7dd9dd0e.176be4","name":"Server Log","channel":"717443103690326108","token":"","x":1630,"y":360,"wires":[]},{"id":"35871ef8.597a92","type":"function","z":"7dd9dd0e.176be4","name":"Set DDC2.Info","func":"flow.set('DDC2.Info.Bool', false);\nnode.status({fill:\"green\",shape:\"dot\",text:\"DDC2.Info.Bool: SET\"});","outputs":0,"noerr":0,"initialize":"","finalize":"","x":900,"y":40,"wires":[],"icon":"node-red/alert.svg"},{"id":"34273584.489caa","type":"function","z":"7dd9dd0e.176be4","name":"!info Blue","func":"var MsgSent = context.get('MsgSent') || 1;\nvar DDC2 = flow.get('DDC2');\nvar usrname = msg.author.username; \nvar responsee = (msg.author.id === DDC2.ServerID) ? msg.author.id : \"<@\"+msg.author.id+\">\" \n//FUNCTIONS////////////////////////////////////////////////////////////////////////////\nfunction pad(num, size) {\n    var s = num+\"\";\n    while (s.length < size) s = \"0\" + s;\n    return s;\n}\nDate.daysBetween = function( date1, date2 ) {\n  var one_day=1000*60*60*24;\n  var date1_ms = date1.getTime();\n  var date2_ms = date2.getTime();\n  var difference_ms = date2_ms - date1_ms;\n  difference_ms = Math.round(difference_ms/1000,3);\n  var mseconds = difference_ms % 1000;\n  var seconds = Math.floor(difference_ms % 60);\n  difference_ms = difference_ms/60; \n  var minutes = Math.floor(difference_ms % 60);\n  difference_ms = difference_ms/60; \n  var hours = Math.floor(difference_ms % 24);  \n  var days = Math.floor(difference_ms/24);\n  return pad(minutes,2) + ':' + pad(seconds,2) + '.' + pad(mseconds,3);\n}\nfunction GetPriority(priority) {\nvar PriorityTable = { 64:\"Low\", \n                   16384:\"Below Normal\", \n                      32:\"Normal\", \n                   32768:\"Above Normal\", \n                     128:\"High\",\n\t\t\t\t\t 256:\"Realtime\"\n\t\t\t\t\t};\nreturn (PriorityTable[priority])\n}\n//END//FUNCTIONS///////////////////////////////////////////////////////////////////////\nif(msg.channel.id == DDC2.Channel.Blue) {\nvar request = msg.message.request; \nif(request == \"!info\") {\nvar localdatetime = (new Date(msg.data.createdTimestamp)).toLocaleString();\nvar InfoOK = DDC2.Info.Bool;\nvar serverMSG = ``;\nif(InfoOK) {\n    var tmstmp = DDC2.Info.TimeStamp\n    var ttc = Date.daysBetween((new Date(msg.data.createdTimestamp)), new Date());\n    var reportage = Date.daysBetween((new Date(tmstmp)), new Date());\n    var reportdatetime = (new Date(tmstmp)).toLocaleString();\n    var PS = flow.get('DDC2.Info.PS');\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        \n//GAME PROCESSES////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//DCS\nvar dcsok = \"OFFLINE\";\nvar dcs = \"\";\n    if(PS.Status.Game.DCS.IsActive) {if(PS.Status.Game.DCS.Responding) {dcsok = `OK`} else {dcsok = `NOT RESPONDING`}}\n        dcs = `\n              #### DCS   INFO ####\n     DCS Server Status : `+dcsok+`\n    InGame Server Name : `+PS.Details.Config.DCS.ServerName+`\n               Version : `+PS.Details.Config.DCS.Version+`\n           Server Port : `+PS.Details.Config.DCS.Port+`\n              Password : `+PS.Details.Config.DCS.Passwrd+`\n      Max Ping Allowed : `+PS.Details.Config.DCS.MaxPing+`ms\n\n          ##### LotATC   INFO ####\n        LotATC Version : `+PS.Details.Config.LotATC.Version+`\n           LotATC Port : `+PS.Details.Config.LotATC.Port+`\n              Blue Pwd : `+PS.Details.Config.LotATC.BluPWD+`\n               Red Pwd : <##REDACTED##>\n\n          #### TACview   INFO ####\n               Version : `+PS.Details.Config.Tacview.Version+`\n          TACview Port : `+PS.Details.Config.DCS.Port+`\n                 Delay : <##REDACTED##>\n            Client Pwd : <##REDACTED##>`\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        \n//SRS            \nvar srsok = \"OFFLINE\";\nvar srs = \"\";\n    if(PS.Status.Game.SRS.IsActive) {if(PS.Status.Game.SRS.Responding) {srsok = `OK`} else {srsok = `NOT RESPONDING`}}\n        srs = `\n              #### SRS   INFO ####\n                Status : `+srsok+`\n               Version : `+PS.Details.Config.SRS.Version+`\n           Server Port : `+PS.Details.Config.SRS.Port+`\n              Blue Pwd : `+PS.Details.Config.SRS.BluPWD+`\n               Red Pwd : <##REDACTED##>`\n\n    serverMSG = `\n           #### SERVER   INFO ####\n             DDC2 Name : `+DDC2.ServerID+`\n       Server DownTime : `+DDC2.ServerDT+`\n             Server IP : `+PS.Details.Info.IPAddr+`\n      Last Report Done : `+reportdatetime+`\n              Data Age : `+reportage\n    }\nelse {\n    serverMSG = `No variables currently set, please run a !report to populate flow variables`\n    }\n\nvar transmit = `Requested by `+responsee+` \\`\\`\\`BLUE FORCE CAHCED INFO REPORT for ` +DDC2.ServerID+ ` as at ` +localdatetime+`\n `+serverMSG+` \n `+dcs+`\n `+srs+`\n \\`\\`\\`*Request completed in `+ttc+`*` \n//LOG/SECTION//////////////////////////////////////////////////////////////////////////\nvar access = \"DENIED\";\nif (msg.message.authorized) {access = \"GRANTED\"}\nvar LogChan = {\n    \"id\": DDC2.Channel.Log\n    }\nvar logmsg = ` \\`\\`\\`    TimeStamp: ` +localdatetime+ `\n     RequestID: `+msg._msgid+`\n     Requestor: `+usrname+ `\n  Request Type: ` +msg.message.request+ `\n       Raw Msg: `+msg.message.raw+`\n     Responder: ` +DDC2.ServerID+ `\n        Access: ` +access+ `\n      Comments: Blue Force - Request completed in `+ttc+`\\`\\`\\` `\nvar logsend = {\n    \"payload\": logmsg,\n    \"channel\": LogChan\n    };\n//TRANSMIT/SECTION/////////////////////////////////////////////////////////////////////\nmsg.payload = transmit\n\nnode.status({fill:\"green\",shape:\"ring\",text: \"Reports Sent: \"+MsgSent});\ncontext.set('MsgSent', (MsgSent + 1));\n\nreturn [[msg],[logsend]];\n    }\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","x":1320,"y":840,"wires":[["d8f13f1e.132fd"],["d8f13f1e.132fd"]],"inputLabels":["Powershell Output"],"outputLabels":["Server-Status","Server-Log"],"icon":"node-red/envelope.svg"},{"id":"260a0650.2e51ba","type":"function","z":"7dd9dd0e.176be4","name":"!info Red","func":"var MsgSent = context.get('MsgSent') || 1;\nvar DDC2 = flow.get('DDC2');\nvar usrname = msg.author.username; \nvar responsee = (msg.author.id === DDC2.ServerID) ? msg.author.id : \"<@\"+msg.author.id+\">\" \n//FUNCTIONS////////////////////////////////////////////////////////////////////////////\nfunction pad(num, size) {\n    var s = num+\"\";\n    while (s.length < size) s = \"0\" + s;\n    return s;\n}\nDate.daysBetween = function( date1, date2 ) {\n  var one_day=1000*60*60*24;\n  var date1_ms = date1.getTime();\n  var date2_ms = date2.getTime();\n  var difference_ms = date2_ms - date1_ms;\n  difference_ms = Math.round(difference_ms/1000,3);\n  var mseconds = difference_ms % 1000;\n  var seconds = Math.floor(difference_ms % 60);\n  difference_ms = difference_ms/60; \n  var minutes = Math.floor(difference_ms % 60);\n  difference_ms = difference_ms/60; \n  var hours = Math.floor(difference_ms % 24);  \n  var days = Math.floor(difference_ms/24);\n  return pad(minutes,2) + ':' + pad(seconds,2) + '.' + pad(mseconds,3);\n}\nfunction GetPriority(priority) {\nvar PriorityTable = { 64:\"Low\", \n                   16384:\"Below Normal\", \n                      32:\"Normal\", \n                   32768:\"Above Normal\", \n                     128:\"High\",\n\t\t\t\t\t 256:\"Realtime\"\n\t\t\t\t\t};\nreturn (PriorityTable[priority])\n}\n//END//FUNCTIONS///////////////////////////////////////////////////////////////////////\nif(msg.channel.id == DDC2.Channel.Red) {\nvar request = msg.message.request; \nif(request == \"!info\") {\nvar localdatetime = (new Date(msg.data.createdTimestamp)).toLocaleString();\nvar InfoOK = DDC2.Info.Bool;\nvar serverMSG = ``;\nif(InfoOK) {\n    var tmstmp = DDC2.Info.TimeStamp\n    var ttc = Date.daysBetween((new Date(msg.data.createdTimestamp)), new Date());\n    var reportage = Date.daysBetween((new Date(tmstmp)), new Date());\n    var reportdatetime = (new Date(tmstmp)).toLocaleString();\n    var PS = flow.get('DDC2.Info.PS');\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        \n//GAME PROCESSES////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//DCS\nvar dcsok = \"OFFLINE\";\nvar dcs = \"\";\n    if(PS.Status.Game.DCS.IsActive) {if(PS.Status.Game.DCS.Responding) {dcsok = `OK`} else {dcsok = `NOT RESPONDING`}}\n        dcs = `\n              #### DCS   INFO ####\n     DCS Server Status : `+dcsok+`\n    InGame Server Name : `+PS.Details.Config.DCS.ServerName+`\n               Version : `+PS.Details.Config.DCS.Version+`\n           Server Port : `+PS.Details.Config.DCS.Port+`\n              Password : `+PS.Details.Config.DCS.Passwrd+`\n      Max Ping Allowed : `+PS.Details.Config.DCS.MaxPing+`ms\n\n          ##### LotATC   INFO ####\n        LotATC Version : `+PS.Details.Config.LotATC.Version+`\n           LotATC Port : `+PS.Details.Config.LotATC.Port+`\n              Blue Pwd : <##REDACTED##>\n               Red Pwd : `+PS.Details.Config.LotATC.RedPWD+`\n\n          #### TACview   INFO ####\n               Version : `+PS.Details.Config.Tacview.Version+`\n          TACview Port : `+PS.Details.Config.DCS.Port+`\n                 Delay : <##REDACTED##>\n            Client Pwd : <##REDACTED##>`\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        \n//SRS            \nvar srsok = \"OFFLINE\";\nvar srs = \"\";\n    if(PS.Status.Game.SRS.IsActive) {if(PS.Status.Game.SRS.Responding) {srsok = `OK`} else {srsok = `NOT RESPONDING`}}\n        srs = `\n              #### SRS   INFO ####\n                Status : `+srsok+`\n               Version : `+PS.Details.Config.SRS.Version+`\n           Server Port : `+PS.Details.Config.SRS.Port+`\n              Blue Pwd : <##REDACTED##>\n               Red Pwd : `+PS.Details.Config.SRS.RedPWD\n\n    serverMSG = `\n           #### SERVER   INFO ####\n             DDC2 Name : `+DDC2.ServerID+`\n       Server DownTime : `+DDC2.ServerDT+`\n             Server IP : `+PS.Details.Info.IPAddr+`\n      Last Report Done : `+reportdatetime+`\n              Data Age : `+reportage\n    }\nelse {\n    serverMSG = `No variables currently set, please run a !report to populate flow variables`\n    }\n\nvar transmit = `Requested by `+responsee+` \\`\\`\\`RED FORCE CAHCED INFO REPORT for ` +DDC2.ServerID+ ` as at ` +localdatetime+`\n `+serverMSG+` \n `+dcs+`\n `+srs+`\n \\`\\`\\`*Request completed in `+ttc+`*` \n//LOG/SECTION//////////////////////////////////////////////////////////////////////////\nvar access = \"DENIED\";\nif (msg.message.authorized) {access = \"GRANTED\"}\nvar LogChan = {\n    \"id\": DDC2.Channel.Log\n    }\nvar logmsg = ` \\`\\`\\`    TimeStamp: ` +localdatetime+ `\n     RequestID: `+msg._msgid+`\n     Requestor: `+usrname+ `\n  Request Type: ` +msg.message.request+ `\n       Raw Msg: `+msg.message.raw+`\n     Responder: ` +DDC2.ServerID+ `\n        Access: ` +access+ `\n      Comments: Red Force - Request completed in `+ttc+`\\`\\`\\` `\nvar logsend = {\n    \"payload\": logmsg,\n    \"channel\": LogChan\n    };\n//TRANSMIT/SECTION/////////////////////////////////////////////////////////////////////\nmsg.payload = transmit\n\nnode.status({fill:\"green\",shape:\"ring\",text: \"Reports Sent: \"+MsgSent});\ncontext.set('MsgSent', (MsgSent + 1));\n\nreturn [[msg],[logsend]];\n    }\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","x":1320,"y":900,"wires":[["d8f13f1e.132fd"],["d8f13f1e.132fd"]],"inputLabels":["Powershell Output"],"outputLabels":["Server-Status","Server-Log"],"icon":"node-red/envelope.svg"},{"id":"700d02c4.d0631c","type":"function","z":"7dd9dd0e.176be4","name":"Set DDC2.Channels","func":"var AdminChannel = \"\"; //For Admin Messages ONLY\nvar BlueChannel = \"\"; //For Blue Force Messages ONLY\nvar RedChannel = \"\"; //For Red Force Messages ONLY\nvar LogChannel = \"\"; //For Log Messages ONLY\n//Setting Variables for Channels\nflow.set('DDC2.Channel.Admin', AdminChannel);\nflow.set('DDC2.Channel.Blue', BlueChannel);\nflow.set('DDC2.Channel.Red', RedChannel);\nflow.set('DDC2.Channel.Log', LogChannel);\n\nnode.status({fill:\"green\",shape:\"dot\",text:\"DDC2.Channels: SET\"});","outputs":0,"noerr":0,"initialize":"","finalize":"","x":620,"y":340,"wires":[],"icon":"node-red/cog.svg"},{"id":"d8f13f1e.132fd","type":"discordSendMessage","z":"7dd9dd0e.176be4","name":"Response Channel","channel":"","token":"","x":1570,"y":720,"wires":[]},{"id":"ea67c285.4cee6","type":"function","z":"7dd9dd0e.176be4","name":"!status MSG","func":"var MsgSent = context.get('MsgSent') || 1;\nvar DDC2 = flow.get('DDC2');\nvar usrname = msg.author.username; \nvar responsee = (msg.author.id === DDC2.ServerID) ? msg.author.id : \"<@\"+msg.author.id+\">\" \n//var responsee = if (msg.author.id != DCSCNC.ServerID) {\"<@\"+msg.author.id+\">\"} else {msg.author.id};\n//var responsee = \"<@\"+msg.author.id+\">\"; \nvar request = msg.message.request; \n\nvar tmstmp = msg.data.createdTimestamp;\nvar localdatetime = (new Date(tmstmp)).toLocaleString();\n\n//FUNCTIONS////////////////////////////////////////////////////////////////////////////\nfunction pad(num, size) {\n    var s = num+\"\";\n    while (s.length < size) s = \"0\" + s;\n    return s;\n}\nDate.daysBetween = function( date1, date2 ) {\n  var one_day=1000*60*60*24;\n  var date1_ms = date1.getTime();\n  var date2_ms = date2.getTime();\n  var difference_ms = date2_ms - date1_ms;\n  difference_ms = Math.round(difference_ms/1000,3);\n  var mseconds = difference_ms % 1000;\n  var seconds = Math.floor(difference_ms % 60);\n  difference_ms = difference_ms/60; \n  var minutes = Math.floor(difference_ms % 60);\n  difference_ms = difference_ms/60; \n  var hours = Math.floor(difference_ms % 24);  \n  var days = Math.floor(difference_ms/24);\n  return pad(minutes,2) + ':' + pad(seconds,2) + '.' + pad(mseconds,3);\n}\nfunction GetPriority(priority) {\nvar PriorityTable = { 64:\"Low\", \n                   16384:\"Below Normal\", \n                      32:\"Normal\", \n                   32768:\"Above Normal\", \n                     128:\"High\",\n\t\t\t\t\t 256:\"Realtime\"\n\t\t\t\t\t};\nreturn (PriorityTable[priority])\n}\n//END//FUNCTIONS///////////////////////////////////////////////////////////////////////\nif((msg.message.request == \"!status\") || (msg.message.request == \"!stop\") || (request == \"!update\") || (request == \"!autostart\")) {\nflow.set('DDC2.Info.PS.Details.Info',msg.PS.Details.Info);\nflow.set('DDC2.Info.PS.Status',msg.PS.Status);\nflow.set('DDC2.Info.Bool',true);\nflow.set('DDC2.Info.TimeStamp',tmstmp);\nvar ttc = Date.daysBetween((new Date(tmstmp)), new Date());\n//SERVER DETAILS\nvar serverMSG = `\n           #### SERVER   INFO ####\n             DDC2 Name : `+DDC2.ServerID+`\n         Server UpTime : `+pad(msg.PS.Details.Info.UpTime.Days,2)+ `:`+pad(msg.PS.Details.Info.UpTime.Hours,2)+`:`+pad(msg.PS.Details.Info.UpTime.Minutes,2)+`:`+pad(msg.PS.Details.Info.UpTime.Seconds,2)+`\n           Memory Load : `+msg.PS.Details.Info.MEMLoad+` %\n              CPU Load : `+msg.PS.Details.Info.CPULoad+` %`\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//UPDATERS//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//DCS Updater\nvar dcsUpdateok = \"INACTIVE\";\nvar dcsUpdate = \"\";\n    if(msg.PS.Status.Update.DCS_updater.IsActive) {\n\t\tif(msg.PS.Status.Update.DCS_updater.Responding) {dcsUpdateok = `RUNNING`} else {dcsUpdateok = `NOT RESPONDING`}\n    dcsUpdate = `\n           #### UPDATE   INFO ####\n     DCS Update Status : `+dcsUpdateok+`\n      DCS Update Ticks : `+msg.PS.Status.Update.DCS_updater.Ticks+`\n       DCS Update Time : `+pad(msg.PS.Status.Update.DCS_updater.RunTime.Days,2)+ `:`+pad(msg.PS.Status.Update.DCS_updater.RunTime.Hours,2)+`:`+pad(msg.PS.Status.Update.DCS_updater.RunTime.Minutes,2)+`:`+pad(msg.PS.Status.Update.DCS_updater.RunTime.Seconds,2)\n        }\n    else {\n      dcsUpdate = `\n           #### UPDATE   INFO ####\n     DCS Update Status : `+dcsUpdateok+`\n      DCS Update Ticks : -\n       DCS Update Time : -`\n        }\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//SRS Updater\nvar srsUpdateok = \"INACTIVE\";\nvar srsUpdate = \"\";\n    if(msg.PS.Status.Update.SRS_Updater.IsActive) {\n\t\tif(msg.PS.Status.Update.SRS_updater.Responding) {srsUpdateok = `RUNNING`} else {srsUpdateok = `NOT RESPONDING`}\n    srsUpdate = `\n     SRS Update Status : `+srsUpdateok+`\n      SRS Update Ticks : `+msg.PS.Status.Update.SRS_updater.Ticks+`\n       SRS Update Time : `+pad(msg.PS.Status.Update.SRS_updater.RunTime.Days,2)+ `:`+pad(msg.PS.Status.Update.SRS_updater.RunTime.Hours,2)+`:`+pad(msg.PS.Status.Update.SRS_updater.RunTime.Minutes,2)+`:`+pad(msg.PS.Status.Update.SRS_updater.RunTime.Seconds,2)\n        }\n    else {\n      srsUpdate = `\n     SRS Update Status : `+srsUpdateok+`\n      SRS Update Ticks : -\n       SRS Update Time : -`\n        }\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//LotATC Updater\nvar lotUpdateok = \"INACTIVE\";\nvar lotUpdate = \"\";\n    if(msg.PS.Status.Update.LOT_Updater.IsActive) {\n\t\tif(msg.PS.Status.Update.LOT_updater.Responding) {lotUpdateok = `RUNNING`} else {lotUpdateok = `NOT RESPONDING`}\n    lotUpdate = `\n  LotATC Update Status : `+lotUpdateok+`\n   LotATC Update Ticks : `+msg.PS.Status.Update.LOT_updater.Ticks+`\n    LotATC Update Time : `+pad(msg.PS.Status.Update.LOT_updater.RunTime.Days,2)+ `:`+pad(msg.PS.Status.Update.LOT_updater.RunTime.Hours,2)+`:`+pad(msg.PS.Status.Update.LOT_updater.RunTime.Minutes,2)+`:`+pad(msg.PS.Status.Update.LOT_updater.RunTime.Seconds,2)\n        }\n    else {\n      lotUpdate = `\n  LotATC Update Status : `+lotUpdateok+`\n   LotATC Update Ticks : -\n    LotATC Update Time : -`\n        }\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        \n//GAME PROCESSES////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//DCS\nvar dcsok = \"OFFLINE\";\nvar dcs = \"\";\n    if(msg.PS.Status.Game.DCS.IsActive) {\n\t\tif(msg.PS.Status.Game.DCS.Responding) {dcsok = `OK`} else {dcsok = `NOT RESPONDING`}\n        dcs = `\n              #### DCS   STATUS ####\n     DCS Server Status : `+dcsok+`\n           DCS Version : `+msg.PS.Status.Game.DCS.ProductVersion+`\n            DCS UpTime : `+pad(msg.PS.Status.Game.DCS.RunTime.Days,2)+ `:`+pad(msg.PS.Status.Game.DCS.RunTime.Hours,2)+`:`+pad(msg.PS.Status.Game.DCS.RunTime.Minutes,2)+`:`+pad(msg.PS.Status.Game.DCS.RunTime.Seconds,2)+`\n  DCS Process Priority : `+GetPriority(msg.PS.Status.Game.DCS.PriorityClass)+`\n    DCS Process Memory : `+msg.PS.Status.Game.DCS.MemGB+`GB   \n     DCS Process Ports : `+msg.PS.Status.Game.DCS.ProcessPorts\n\n        }\n    else {\n        dcs = `\n              #### DCS   STATUS ####\n     DCS Server Status : `+dcsok\n        }\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        \n//SRS            \nvar srsok = \"OFFLINE\";\nvar srs = \"\";\n    if(msg.PS.Status.Game.SRS.IsActive) {\n\t\tif(msg.PS.Status.Game.SRS.Responding) {srsok = `OK`} else {srsok = `NOT RESPONDING`}\n        srs = `\n              #### SRS   STATUS ####\n     SRS Server Status : `+srsok+`\n           SRS Version : `+msg.PS.Status.Game.SRS.ProductVersion+`\n            SRS UpTime : `+pad(msg.PS.Status.Game.SRS.RunTime.Days,2)+ `:`+pad(msg.PS.Status.Game.SRS.RunTime.Hours,2)+`:`+pad(msg.PS.Status.Game.SRS.RunTime.Minutes,2)+`:`+pad(msg.PS.Status.Game.SRS.RunTime.Seconds,2)+`\n  SRS Process Priority : `+GetPriority(msg.PS.Status.Game.SRS.PriorityClass)+`\n    SRS Process Memory : `+msg.PS.Status.Game.SRS.MemGB+`GB\n      SRS Server Ports : `+msg.PS.Status.Game.SRS.ProcessPorts\n        }\n    else {\n        srs = `\n              #### SRS   STATUS ####\n     SRS Server Status : `+srsok\n        }\n\nvar transmit = `Requested by `+responsee+` \\`\\`\\` DETAILED REPORT for ` +DDC2.ServerID+ ` as at ` +localdatetime+`\n `+serverMSG+` \n `+dcs+`\n `+srs+`\n `+dcsUpdate+`\n `+srsUpdate+`\n `+lotUpdate+`\n  \\`\\`\\`*Request completed in `+ttc+`*` \n//LOG/SECTION//////////////////////////////////////////////////////////////////////////\nvar access = \"DENIED\";\nif (msg.message.authorized) {access = \"GRANTED\"}\nvar LogChan = {\n    \"id\": DDC2.Channel.Log\n    }\nvar logmsg = ` \\`\\`\\`    TimeStamp: ` +localdatetime+ `\n     RequestID: `+msg._msgid+`\n     Requestor: `+usrname+ `\n  Request Type: ` +msg.message.request+ `\n       Raw Msg: `+msg.message.raw+`\n     Responder: ` +DDC2.ServerID+ `\n        Access: ` +access+ `\n      Comments: Request completed in `+ttc+`\\`\\`\\` `\nvar logsend = {\n    \"payload\": logmsg,\n    \"channel\": LogChan\n    };\n//TRANSMIT/SECTION/////////////////////////////////////////////////////////////////////\nmsg.payload = transmit\n\nnode.status({fill:\"green\",shape:\"ring\",text: \"Reports Sent: \"+MsgSent});\ncontext.set('MsgSent', (MsgSent + 1));\n\nreturn [[msg],[logsend]];\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","x":1290,"y":540,"wires":[["d8f13f1e.132fd"],["d8f13f1e.132fd"]],"inputLabels":["Powershell Output"],"outputLabels":["Server-Status","Server-Log"],"icon":"node-red/envelope.svg"}]
